name: Release

on:
  push:
    tags: [ 'v*' ]

env:
  GO_VERSION: '1.25'
  REGISTRY: ghcr.io
  IMAGE_NAME: rajsinghtech/tsdnsproxy

jobs:
  build-binaries:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - {os: linux, arch: amd64}
          - {os: linux, arch: arm64}
          - {os: darwin, arch: amd64}
          - {os: darwin, arch: arm64}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Cache Go modules and build
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          go build -ldflags "-X main.version=${{ steps.version.outputs.VERSION }}" \
            -o tsdnsproxy-${{ matrix.os }}-${{ matrix.arch }} ./cmd/tsdnsproxy

      - name: Package binary
        run: tar czf tsdnsproxy-${{ matrix.os }}-${{ matrix.arch }}.tar.gz tsdnsproxy-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tsdnsproxy-${{ matrix.os }}-${{ matrix.arch }}
          path: tsdnsproxy-${{ matrix.os }}-${{ matrix.arch }}.tar.gz

  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    outputs:
      digest: ${{ steps.build.outputs.digest }}
      tags: ${{ steps.meta.outputs.tags }}
      version: ${{ steps.version.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-buildx-action@v3

      - name: Get version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest

      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.version.outputs.VERSION }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.9.2

      - name: Sign container image
        env:
          DIGEST: ${{ steps.build.outputs.digest }}
        run: |
          cosign sign --yes ghcr.io/${{ env.IMAGE_NAME }}@${DIGEST}

      - name: Generate SBOM
        uses: anchore/sbom-action@v0.20.6
        with:
          image: ghcr.io/${{ env.IMAGE_NAME }}@${{ steps.build.outputs.digest }}
          artifact-name: sbom.spdx.json
          output-file: sbom.spdx.json

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-binaries, build-and-push-image]
    permissions:
      contents: write
    steps:
      - name: Download binary artifacts
        uses: actions/download-artifact@v5
        with:
          path: ./artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./artifacts/tsdnsproxy-*/*.tar.gz
            ./artifacts/sbom/sbom.spdx.json
          generate_release_notes: true
          fail_on_unmatched_files: true
          body: |
            ## Container Images

            - `ghcr.io/${{ env.IMAGE_NAME }}:${{ needs.build-and-push-image.outputs.version }}`
            - `ghcr.io/${{ env.IMAGE_NAME }}@${{ needs.build-and-push-image.outputs.digest }}`

            ### Verify Image Signature

            ```bash
            cosign verify \
              --certificate-identity-regexp=https://github.com/${{ github.repository }} \
              --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
              ghcr.io/${{ env.IMAGE_NAME }}@${{ needs.build-and-push-image.outputs.digest }}
            ```

            ## Binary Downloads

            Download the appropriate binary for your platform from the assets below.
